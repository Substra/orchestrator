// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: protos/objective.proto

package objective

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Objective struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TestDataset string            `protobuf:"bytes,3,opt,name=test_dataset,json=testDataset,proto3" json:"test_dataset,omitempty"`
	Permissions []string          `protobuf:"bytes,4,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Metadata    map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Objective) Reset() {
	*x = Objective{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_objective_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Objective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Objective) ProtoMessage() {}

func (x *Objective) ProtoReflect() protoreflect.Message {
	mi := &file_protos_objective_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Objective.ProtoReflect.Descriptor instead.
func (*Objective) Descriptor() ([]byte, []int) {
	return file_protos_objective_proto_rawDescGZIP(), []int{0}
}

func (x *Objective) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Objective) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Objective) GetTestDataset() string {
	if x != nil {
		return x.TestDataset
	}
	return ""
}

func (x *Objective) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *Objective) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_protos_objective_proto protoreflect.FileDescriptor

var file_protos_objective_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x09, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x95, 0x01, 0x0a, 0x10, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41,
	0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x14, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x14, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x14, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x14, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22,
	0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_objective_proto_rawDescOnce sync.Once
	file_protos_objective_proto_rawDescData = file_protos_objective_proto_rawDesc
)

func file_protos_objective_proto_rawDescGZIP() []byte {
	file_protos_objective_proto_rawDescOnce.Do(func() {
		file_protos_objective_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_objective_proto_rawDescData)
	})
	return file_protos_objective_proto_rawDescData
}

var file_protos_objective_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_protos_objective_proto_goTypes = []interface{}{
	(*Objective)(nil), // 0: objective.Objective
	nil,               // 1: objective.Objective.MetadataEntry
}
var file_protos_objective_proto_depIdxs = []int32{
	1, // 0: objective.Objective.metadata:type_name -> objective.Objective.MetadataEntry
	0, // 1: objective.ObjectiveService.RegisterObjective:input_type -> objective.Objective
	0, // 2: objective.ObjectiveService.QueryObjective:input_type -> objective.Objective
	0, // 3: objective.ObjectiveService.RegisterObjective:output_type -> objective.Objective
	0, // 4: objective.ObjectiveService.QueryObjective:output_type -> objective.Objective
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protos_objective_proto_init() }
func file_protos_objective_proto_init() {
	if File_protos_objective_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_objective_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Objective); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_objective_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_objective_proto_goTypes,
		DependencyIndexes: file_protos_objective_proto_depIdxs,
		MessageInfos:      file_protos_objective_proto_msgTypes,
	}.Build()
	File_protos_objective_proto = out.File
	file_protos_objective_proto_rawDesc = nil
	file_protos_objective_proto_goTypes = nil
	file_protos_objective_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ObjectiveServiceClient is the client API for ObjectiveService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ObjectiveServiceClient interface {
	RegisterObjective(ctx context.Context, in *Objective, opts ...grpc.CallOption) (*Objective, error)
	QueryObjective(ctx context.Context, in *Objective, opts ...grpc.CallOption) (*Objective, error)
}

type objectiveServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewObjectiveServiceClient(cc grpc.ClientConnInterface) ObjectiveServiceClient {
	return &objectiveServiceClient{cc}
}

func (c *objectiveServiceClient) RegisterObjective(ctx context.Context, in *Objective, opts ...grpc.CallOption) (*Objective, error) {
	out := new(Objective)
	err := c.cc.Invoke(ctx, "/objective.ObjectiveService/RegisterObjective", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *objectiveServiceClient) QueryObjective(ctx context.Context, in *Objective, opts ...grpc.CallOption) (*Objective, error) {
	out := new(Objective)
	err := c.cc.Invoke(ctx, "/objective.ObjectiveService/QueryObjective", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ObjectiveServiceServer is the server API for ObjectiveService service.
type ObjectiveServiceServer interface {
	RegisterObjective(context.Context, *Objective) (*Objective, error)
	QueryObjective(context.Context, *Objective) (*Objective, error)
}

// UnimplementedObjectiveServiceServer can be embedded to have forward compatible implementations.
type UnimplementedObjectiveServiceServer struct {
}

func (*UnimplementedObjectiveServiceServer) RegisterObjective(context.Context, *Objective) (*Objective, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterObjective not implemented")
}
func (*UnimplementedObjectiveServiceServer) QueryObjective(context.Context, *Objective) (*Objective, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryObjective not implemented")
}

func RegisterObjectiveServiceServer(s *grpc.Server, srv ObjectiveServiceServer) {
	s.RegisterService(&_ObjectiveService_serviceDesc, srv)
}

func _ObjectiveService_RegisterObjective_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Objective)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ObjectiveServiceServer).RegisterObjective(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objective.ObjectiveService/RegisterObjective",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ObjectiveServiceServer).RegisterObjective(ctx, req.(*Objective))
	}
	return interceptor(ctx, in, info, handler)
}

func _ObjectiveService_QueryObjective_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Objective)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ObjectiveServiceServer).QueryObjective(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objective.ObjectiveService/QueryObjective",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ObjectiveServiceServer).QueryObjective(ctx, req.(*Objective))
	}
	return interceptor(ctx, in, info, handler)
}

var _ObjectiveService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "objective.ObjectiveService",
	HandlerType: (*ObjectiveServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterObjective",
			Handler:    _ObjectiveService_RegisterObjective_Handler,
		},
		{
			MethodName: "QueryObjective",
			Handler:    _ObjectiveService_QueryObjective_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/objective.proto",
}
