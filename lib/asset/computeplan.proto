syntax = "proto3";

package orchestrator;

option go_package = "github.com/owkin/orchestrator/lib/asset";

import "google/protobuf/timestamp.proto";

enum ComputePlanStatus {
  PLAN_STATUS_UNKNOWN = 0;
  PLAN_STATUS_WAITING = 1;
  PLAN_STATUS_TODO = 2;
  PLAN_STATUS_DOING = 3;
  PLAN_STATUS_DONE = 4;
  PLAN_STATUS_CANCELED = 5;
  PLAN_STATUS_FAILED = 6;
}

message ComputePlan {
  string key = 1;
  string owner = 2;
  uint32 waiting_count = 8; // Dynamic data, not persisted and set on query
  uint32 todo_count = 9; // Dynamic data, not persisted and set on query
  uint32 doing_count = 10; // Dynamic data, not persisted and set on query
  uint32 canceled_count = 11; // Dynamic data, not persisted and set on query
  uint32 failed_count = 12; // Dynamic data, not persisted and set on query
  uint32 done_count = 3; // Dynamic data, not persisted and set on query
  uint32 task_count = 4; // Dynamic data, not persisted and set on query
  ComputePlanStatus status = 5; // Dynamic data, not persisted and set on query
  bool delete_intermediary_models = 6;
  google.protobuf.Timestamp creation_date = 7;
  string tag = 16;
  map<string, string> metadata = 17;
}

message NewComputePlan {
  string key = 1;
  string tag = 16;
  map<string, string> metadata = 17;
  bool delete_intermediary_models = 18;
}

message GetComputePlanParam {
  string key = 1;
}

enum ComputePlanAction {
  PLAN_ACTION_UNKNOWN = 0;
  PLAN_ACTION_CANCELED = 1;
}

message ApplyPlanActionParam {
  string key = 1;
  ComputePlanAction action = 2;
}

message ApplyPlanActionResponse {}

message PlanQueryFilter {
  string owner = 1;
}

message QueryPlansParam {
  string page_token = 1;
  uint32 page_size = 2;
  PlanQueryFilter filter = 3;
}

message QueryPlansResponse {
  repeated ComputePlan plans = 1;
  string next_page_token = 2;
}

service ComputePlanService {
  rpc RegisterPlan(NewComputePlan) returns (ComputePlan);
  rpc GetPlan(GetComputePlanParam) returns (ComputePlan);
  rpc ApplyPlanAction(ApplyPlanActionParam) returns (ApplyPlanActionResponse);
  rpc QueryPlans(QueryPlansParam) returns (QueryPlansResponse);
}
