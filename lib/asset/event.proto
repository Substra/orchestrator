// Copyright 2021 Owkin Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package orchestrator;

import "common.proto";

option go_package = "github.com/owkin/orchestrator/lib/asset";

enum EventKind {
  EVENT_UNKNOWN = 0;
  EVENT_ASSET_CREATED = 1;
  EVENT_ASSET_UPDATED = 2;
  EVENT_ASSET_DISABLED = 3;
}

// Event is an occurence of an orchestration event.
// It is triggered during orchestration and allows a consumer to react to the orchestration process.
message Event {
  string id = 1;
  string asset_key = 2;
  AssetKind asset_kind = 3;
  EventKind event_kind = 4;
  string channel = 5;
  map<string, string> metadata = 6;
  uint64 timestamp = 7;
}

message QueryEventsParam {
  string page_token = 1;
  uint32 page_size = 2;
  EventQueryFilter filter = 3;
}

message EventQueryFilter {
  string asset_key = 1;
  AssetKind asset_kind = 2;
  EventKind event_kind = 3;
}

message QueryEventsResponse {
  repeated Event events = 1;
  string next_page_token = 2;
}

service EventService {
  rpc QueryEvents(QueryEventsParam) returns (QueryEventsResponse);
}