syntax = "proto3";

package orchestrator;

option go_package = "github.com/substra/orchestrator/lib/asset";

enum AssetKind {
  reserved 2;
  reserved "ASSET_METRIC";

  ASSET_UNKNOWN = 0;
  ASSET_ORGANIZATION = 1;
  ASSET_DATA_SAMPLE = 3;
  ASSET_DATA_MANAGER = 4;
  ASSET_ALGO = 5;
  ASSET_COMPUTE_TASK = 6;
  ASSET_COMPUTE_PLAN = 7;
  ASSET_MODEL = 8;
  ASSET_PERFORMANCE = 9;
  ASSET_FAILURE_REPORT = 10;
  ASSET_COMPUTE_TASK_OUTPUT_ASSET = 11;
}

enum SortOrder {
  UNSPECIFIED = 0;
  ASCENDING = 1;
  DESCENDING = 2;
}

// Addressable references an asset on the network.
// It contains both its address (backend URL) and checksum.
message Addressable {
  string checksum = 1;
  string storage_address = 2;
}

// Permissions for an asset, each key is an action
message Permissions {
  Permission process = 1;
  Permission download = 2;
}

// Permission represents the permission for a single action
message Permission {
  bool public = 1;
  repeated string authorized_ids = 2;
}

// NewPermissions is used to create a new permission set.
// This will be transformed in a full Permissions structure on registration.
message NewPermissions {
  bool public = 1;
  repeated string authorized_ids = 2;
}
