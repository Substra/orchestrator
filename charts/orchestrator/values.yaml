# Default values for orchestrator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9000

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  hosts:
    - host: orchestrator.node-1.com
      paths: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  enabled: true
  postgresqlDatabase: orchestrator
  postgresqlUsername: postgres
  postgresqlPassword: postgres

rabbitmq:
  auth:
    erlangCookie: rabbitmqErlangCookie
    tls:
      enabled: false

fabric:
  organization: MyOrg1
  mspID: MyOrg1MSP
  channels:
    - mychannel
    - yourchannel
  user:
    name: User
  peer:
    host: network-org-1-peer-1-hlf-peer.org-1
    port: 7051
  waitForEventTimeoutSeconds: 45
  strategy:
    invoke: ALL
    query: SELF
  secrets:
    caCert: hlf-cacert
    user:
      cert: hlf-msp-cert-user
      key: hlf-msp-key-user
    peer:
      tls:
        client: hlf-tls-user
        server: hlf-tls-admin

# grpcOptions:
#   keepalive:
#     timeMs: 120000
#   maxSendMessageLength: -1
#   maxReceiveMessageLength: -1
#   keepaliveTimeoutMs: 20000
#   http2MaxPingsWithoutData: 0
#   keepalivePermitWithoutCalls: 1

# Orchestrator application specific parameters
orchestrator:
  image:
    repository: owkin/orchestrator
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  logLevel: DEBUG
  mode: standalone # the orchestrator can run in either "standalone" or "chaincode" mode
  chaincode: mycc
  verifyClientMSPID: true

  tls:
    enabled: false
    mtls:
      enabled: false
      secrets:
        clientCACerts: {}

channels:
  - name: mychannel
    organizations: [ Org1MSP, Org2MSP ]
    fabric: # relevant only in distributed mode
      chaincodes: [ mycc ]
  - name: yourchannel
    organizations: [ Org1MSP, Org2MSP ]
    fabric:
      chaincodes: [ yourcc ]

forwarder:
  image:
    repository: owkin/forwarder
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

rabbitmqOperator:
  image:
    repository: owkin/rabbitmq-operator
    pullPolicy: IfNotPresent
  credentials:
    Org1MSP: password1
    Org2MSP: password2
