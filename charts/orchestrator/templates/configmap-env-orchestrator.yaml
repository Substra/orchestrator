apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "orchestrator.server.fullname" . }}-env
  labels:
    {{- include "orchestrator.server.labels" . | nindent 4 }}
data:
  # Global settings
  ORCHESTRATOR_MODE: {{ .Values.orchestrator.mode }}
  VERIFY_CLIENT_MSP_ID: "{{ and $.Values.orchestrator.tls.enabled $.Values.orchestrator.tls.mtls.enabled $.Values.orchestrator.verifyClientMSPID }}"
  CHANNEL_CONFIG: /var/orchestrator/config.yaml
  TX_RETRY_BUDGET: "{{ .Values.orchestrator.txRetryBudget }}"

  # Standalone settings
  {{- if eq .Values.orchestrator.mode "standalone" }}
  LOG_SQL_VERBOSE: "{{ .Values.orchestrator.logSQLVerbose }}"
  {{- end }}

  # Distributed settings
  {{- if eq .Values.orchestrator.mode "distributed" }}
  FABRIC_CERT: /var/hyperledger/msp/signcerts/cert.pem
  FABRIC_KEY: /var/hyperledger/msp/keystore/key.pem
  MSPID: {{ .Values.fabric.mspID }}
  NETWORK_CONFIG: /var/hyperledger/fabric-config.yaml
  FABRIC_GATEWAY_TIMEOUT: {{ .Values.orchestrator.fabricGatewayTimeout }}
  {{- end }}

  # TLS settings
  TLS_ENABLED: "{{ $.Values.orchestrator.tls.enabled }}"
  MTLS_ENABLED: "{{ and $.Values.orchestrator.tls.enabled $.Values.orchestrator.tls.mtls.enabled }}"
  {{- if $.Values.orchestrator.tls.enabled }}
  TLS_CERT_PATH: /var/orchestrator/tls/server/pair/tls.crt
  TLS_KEY_PATH: /var/orchestrator/tls/server/pair/tls.key
  {{- if $.Values.orchestrator.tls.mtls.enabled }}
  TLS_SERVER_CA_CERT: /var/orchestrator/tls/server/cacert/ca.crt
  TLS_CLIENT_CA_CERT_DIR: /var/orchestrator/tls/client/
  {{- end }}
  {{- end }}
