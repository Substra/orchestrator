{{- if eq .Values.orchestrator.mode "standalone" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "orchestrator.migrations.fullname" . }}
  labels:
    {{- include "orchestrator.migrations.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: {{ include "orchestrator.migrations.fullname" . }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      initContainers:
        {{- include "substra-orc.waitPostgresqlInitContainer" . | nindent 8 }}
      containers:
      - name: db-migrations
        image: {{ include "substra-orc.images.name" (dict "img" .Values.orchestrator.image "defaultTag" $.Chart.AppVersion) }}
        command:
          - sh
          - -c
          - |
            set -eu
            DATABASE_URI="postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@$DATABASE_HOSTNAME:$DATABASE_PORT/$DATABASE_DATABASE"
            if [ -n $DATABASE_CONNECTION_PARAMETERS ]; then
              DATABASE_URI="$DATABASE_URI?$DATABASE_CONNECTION_PARAMETERS"
            fi
            migrate -source file:///migrations/ -database "$DATABASE_URI" up
        envFrom:
        - configMapRef:
            name: {{ template "orchestrator.server.fullname" . }}-database
        - secretRef:
            name: {{ template "substra-orc.database.secret-name" . }}
{{- end }}
