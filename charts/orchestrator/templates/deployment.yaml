apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orchestrator.fullname" . }}
  labels:
    {{- include "orchestrator.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "orchestrator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "orchestrator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "orchestrator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:9000"]
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:9000"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
           {{- if .Values.couchdb.enabled }}
           - name: COUCHDB_DSN
             value: http://{{ .Release.Name }}-couchdb.{{ .Release.Namespace }}:{{ .Values.couchdb.service.externalPort }}
           {{- end}}
           - name: ORCHESTRATOR_MODE
             value: {{ .Values.orchestrator.mode }}
           {{- if eq .Values.orchestrator.mode "chaincode" }}
           - name: ORCHESTRATOR_CERT
             value: {{ .Values.orchestrator.cert }}
           - name: ORCHESTRATOR_KEY
             value: {{ .Values.orchestrator.key }}
           - name: ORCHESTRATOR_MSPID
             value: {{ .Values.fabric.mspID }}
           - name: ORCHESTRATOR_NETWORK_CONFIG
             value: {{ .Values.orchestrator.networkConfig }}
           - name: ORCHESTRATOR_CHANNEL
             value: {{ .Values.orchestrator.channel }}
           - name: ORCHESTRATOR_CHAINCODE
             value: {{ .Values.orchestrator.chaincode }}
           {{- end}}
          volumeMounts:
            {{- if eq .Values.orchestrator.mode "chaincode" }}
            - name: fabric-config
              mountPath: /var/hyperledger/fabric-config.yaml
              subPath: fabric-config.yaml
            - name: fabric-config
              mountPath: /var/hyperledger/xxx
            - name: user-cert
              mountPath: /var/hyperledger/msp/signcerts
            - name: user-key
              mountPath: /var/hyperledger/msp/keystore
              # subPath: mykey.pem
              # readOnly: true
            - name: peer-tls-server
              mountPath: /var/hyperledger/tls/server/pair
            - name: peer-tls-client
              mountPath: /var/hyperledger/tls/client/pair
            - name: cacert
              mountPath: /var/hyperledger/tls/server/cert/
            {{- end }}
      volumes:
        {{- if eq .Values.orchestrator.mode "chaincode" }}
        - name: user-cert
          secret:
            secretName: {{ $.Values.fabric.secrets.user.cert }}
        - name: user-key
          secret:
            secretName: {{ $.Values.fabric.secrets.user.key }}
            # items:
            #  - key: key.pem
            #    path: mykey.pem
        - name: peer-tls-server
          secret:
            secretName: {{ $.Values.fabric.secrets.peer.tls.server }}
        - name: peer-tls-client
          secret:
            secretName: {{ $.Values.fabric.secrets.peer.tls.client }}
        - name: cacert
          secret:
            secretName: {{ $.Values.fabric.secrets.caCert }}
        - name: fabric-config
          configMap:
            name: {{ include "orchestrator.fullname" . }}-fabric
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
