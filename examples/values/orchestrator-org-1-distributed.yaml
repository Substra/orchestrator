---
orchestrator:
  mode: distributed
  channel: mychannel
  logLevel: DEBUG
  tls:
    createCertificates:
      enabled: true
      domains:
        - "orchestrator.node-1.com"
        - "owkin-orchestrator-org-1-server.org-1.svc.cluster.local"
        - "owkin-orchestrator-org-1-rabbitmq.org-1.svc.cluster.local"
      duration: 2160h
      issuer: owkin-issuer
    enabled: true
    secrets:
      pair: orchestrator-tls-server-pair
    cacert: orchestrator-tls-cacert
    mtls:
      enabled: true
      clientCACerts:
        orchestrator-ca:
          - orchestrator-tls-cacert
        MyOrg1MSP:
          - orchestrator-tls-cacert
        MyOrg2MSP:
          - orchestrator-tls-cacert
  txRetryBudget: 90s
  fabricGatewayTimeout: 40s
  verifyClientMSPID: true

metrics:
  enabled: true

rabbitmq:
  auth:
    username: user
    password: password
    tls:
      enabled: true
      existingSecret: orchestrator-tls-server-pair
  persistence:
    enabled: false

fabric:
  organization: MyOrg1
  mspID: MyOrg1MSP
  peer:
    host: network-org-1-peer-1-hlf-peer.org-1.svc.cluster.local

postgresql:
  enabled: false

ingress:
  enabled: true
  hostname: "orchestrator.node-1.com"
  annotations:
    kubernetes.io/ingress.class: nginx    

channels:
  - name: mychannel
    organizations: [ MyOrg1MSP ] # single org required here
    fabric:
      chaincodes: [ mycc ]
  - name: yourchannel
    organizations: [ MyOrg1MSP ]
    fabric:
      chaincodes: [ yourcc ]

rabbitmqOperator:
  credentials:
    MyOrg1MSP: password1
